services:
  app:
    ports:
      - "8000:8000"
    env_file:
      - ../../core/app/.env
    build:
      context: ../../core/app
      dockerfile: ./Dockerfile.dev
    develop:
      watch:
        - action: rebuild
          path: ../../core/app
    depends_on:
      # redis:
      #   condition: service_healthy
      #   restart: true
      db:
        condition: service_healthy
        restart: true

  ui:
    ports:
      - "3000:3000"
    build:
      context: ../../ui
      dockerfile: ./Dockerfile.dev
    develop:
      watch:
        - action: rebuild
          path: ../../ui

  # redis:
  #   image: redis:alpine
  #   ports:
  #     - "6379:6379"
  #   restart: always
  #   environment:
  #     - REDIS_PASSWORD=12345
  #   command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
  #   healthcheck:
  #     test: ["CMD-SHELL", "redis-cli -a $$REDIS_PASSWORD ping | grep pong"]
  #     interval: 5s
  #     timeout: 2s
  #     retries: 5

  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - ./database.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "alice@wonderland.tld"
      PGADMIN_DEFAULT_PASSWORD: "12345"
      PGADMIN_SERVER_MODE: "False"  # ! disable server mode to allow saving connections
      PGADMIN_SERVER_NAME: "Postgres"
      PGADMIN_SERVER_HOST: "db"
      PGADMIN_SERVER_PORT: "8888"
      PGADMIN_SERVER_USER: "gosty"
      PGADMIN_SERVER_PASSWORD: "my-insecure-password"
    ports:
      - "8888:8888"
    depends_on:
      - db

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - ui
      - app


  # zookeeper:
  #   env_file:
  #   - ./.env
  #   hostname: zookeeper
  #   image: bitnami/zookeeper
  #   expose:
  #   - "2181"
  #   ports:
  #   - "2181:2181"
  
  # kafka:
  #   image: bitnami/kafka
  #   env_file:
  #   - ./.env
  #   depends_on:
  #   - zookeeper
  #   ports:
  #   - '9092:9092'

  # producer:
  #   build:
  #     context: .
  #     dockerfile: ./core/producer/Dockerfile.dev
  #   env_file:
  #     - ./core/producer/.env
  #   ports:
  #     - 8001:8000
  #   restart: always
  #   depends_on:
  #     - kafka


  
# volumes:
#   kafka_data:
#     driver: local